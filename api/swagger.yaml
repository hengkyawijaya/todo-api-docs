---
swagger: "2.0"
info:
  description: "API description in Markdown."
  version: "1.0.0"
  title: "Sample API"
host: "todo-api-gateway.apps.playcourt.id"
schemes:
- "http"
paths:
  /auth/login:
    post:
      tags:
      - "Auth"
      summary: "Creates a new user."
      operationId: "authLoginPOST"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "data"
        description: "The user to create."
        required: false
        schema:
          $ref: "#/definitions/data"
      responses:
        200:
          description: "OK"
      x-swagger-router-controller: "Auth"
  /users/create:
    post:
      tags:
      - "User"
      summary: "Creates a new user."
      operationId: "usersCreatePOST"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "data"
        description: "The user to create."
        required: false
        schema:
          $ref: "#/definitions/data_1"
      responses:
        200:
          description: "OK"
      x-swagger-router-controller: "User"
  /users:
    get:
      tags:
      - "User"
      summary: "find many user."
      operationId: "usersGET"
      consumes:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearer xxxxxxx"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        required: false
        type: "string"
      - name: "search"
        in: "query"
        required: false
        type: "string"
      - name: "searchBy"
        in: "query"
        required: false
        type: "string"
      - name: "order"
        in: "query"
        required: false
        type: "string"
      - name: "orderBy"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "OK"
      security:
      - ApiKeyAuth: []
      x-swagger-router-controller: "User"
  /users/{id}:
    get:
      tags:
      - "User"
      summary: "find a user."
      operationId: "usersIdGET"
      consumes:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearer xxxxxxx"
        required: false
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security:
      - ApiKeyAuth: []
      x-swagger-router-controller: "User"
  /users/{id}/update:
    put:
      tags:
      - "User"
      summary: "update a user."
      operationId: "usersIdUpdatePUT"
      consumes:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearer xxxxxxx"
        required: false
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "The user to create."
        required: false
        schema:
          $ref: "#/definitions/data_2"
      responses:
        200:
          description: "OK"
      security:
      - ApiKeyAuth: []
      x-swagger-router-controller: "User"
  /users/{id}/delete:
    delete:
      tags:
      - "User"
      summary: "delete a user."
      operationId: "usersIdDeleteDELETE"
      consumes:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearer xxxxxxx"
        required: false
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security:
      - ApiKeyAuth: []
      x-swagger-router-controller: "User"
  /posts/create:
    post:
      tags:
      - "Post"
      summary: "Creates a new post."
      operationId: "postsCreatePOST"
      consumes:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearer xxxxxxx"
        required: false
        type: "string"
      - in: "body"
        name: "data"
        description: "The post to create."
        required: false
        schema:
          $ref: "#/definitions/data_3"
      responses:
        200:
          description: "OK"
      security:
      - ApiKeyAuth: []
      x-swagger-router-controller: "Post"
  /posts:
    get:
      tags:
      - "Post"
      summary: "find many post."
      operationId: "postsGET"
      consumes:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearer xxxxxxx"
        required: false
        type: "string"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        required: false
        type: "string"
      - name: "search"
        in: "query"
        required: false
        type: "string"
      - name: "searchBy"
        in: "query"
        required: false
        type: "string"
      - name: "order"
        in: "query"
        required: false
        type: "string"
      - name: "orderBy"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "OK"
      security:
      - ApiKeyAuth: []
      x-swagger-router-controller: "Post"
  /posts/{id}:
    get:
      tags:
      - "Post"
      summary: "find a post."
      operationId: "postsIdGET"
      consumes:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearer xxxxxxx"
        required: false
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security:
      - ApiKeyAuth: []
      x-swagger-router-controller: "Post"
  /posts/{id}/update:
    put:
      tags:
      - "Post"
      summary: "update a post."
      operationId: "postsIdUpdatePUT"
      consumes:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearer xxxxxxx"
        required: false
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "The post to create."
        required: false
        schema:
          $ref: "#/definitions/data_4"
      responses:
        200:
          description: "OK"
      security:
      - ApiKeyAuth: []
      x-swagger-router-controller: "Post"
  /posts/{id}/delete:
    delete:
      tags:
      - "Post"
      summary: "delete a post."
      operationId: "postsIdDeleteDELETE"
      consumes:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearer xxxxxxx"
        required: false
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security:
      - ApiKeyAuth: []
      x-swagger-router-controller: "Post"
  /comments/create:
    post:
      tags:
      - "Comment"
      summary: "Creates a new comment."
      operationId: "commentsCreatePOST"
      consumes:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearer xxxxxxx"
        required: false
        type: "string"
      - in: "body"
        name: "data"
        description: "The comment to create."
        required: false
        schema:
          $ref: "#/definitions/data_5"
      responses:
        200:
          description: "OK"
      security:
      - ApiKeyAuth: []
      x-swagger-router-controller: "Comment"
  /comments:
    get:
      tags:
      - "Comment"
      summary: "find many comment."
      operationId: "commentsGET"
      consumes:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearer xxxxxxx"
        required: false
        type: "string"
      - name: "filter"
        in: "query"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        required: false
        type: "string"
      - name: "search"
        in: "query"
        required: false
        type: "string"
      - name: "searchBy"
        in: "query"
        required: false
        type: "string"
      - name: "order"
        in: "query"
        required: false
        type: "string"
      - name: "orderBy"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "OK"
      security:
      - ApiKeyAuth: []
      x-swagger-router-controller: "Comment"
  /comments/{id}:
    get:
      tags:
      - "Comment"
      summary: "find a comment."
      operationId: "commentsIdGET"
      consumes:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearer xxxxxxx"
        required: false
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security:
      - ApiKeyAuth: []
      x-swagger-router-controller: "Comment"
  /comments/{id}/update:
    put:
      tags:
      - "Comment"
      summary: "update a comment."
      operationId: "commentsIdUpdatePUT"
      consumes:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearer xxxxxxx"
        required: false
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "data"
        description: "The comment to create."
        required: false
        schema:
          $ref: "#/definitions/data_6"
      responses:
        200:
          description: "OK"
      security:
      - ApiKeyAuth: []
      x-swagger-router-controller: "Comment"
  /comments/{id}/delete:
    delete:
      tags:
      - "Comment"
      summary: "delete a comment."
      operationId: "commentsIdDeleteDELETE"
      consumes:
      - "application/json"
      parameters:
      - name: "Authorization"
        in: "header"
        description: "Bearer xxxxxxx"
        required: false
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "OK"
      security:
      - ApiKeyAuth: []
      x-swagger-router-controller: "Comment"
securityDefinitions:
  ApiKeyAuth:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  User:
    required:
    - "email"
    - "name"
    - "password"
    properties:
      _id:
        type: "string"
      name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      updatedAt:
        type: "string"
        format: "date-time"
      createdAt:
        type: "string"
        format: "date-time"
  Post:
    properties:
      _id:
        type: "string"
      user:
        $ref: "#/definitions/User"
      content:
        type: "string"
      updatedAt:
        type: "string"
        format: "date-time"
      createdAt:
        type: "string"
        format: "date-time"
  Comment:
    properties:
      _id:
        type: "string"
      user:
        $ref: "#/definitions/User"
      post:
        $ref: "#/definitions/Post"
      content:
        type: "string"
      updatedAt:
        type: "string"
        format: "date-time"
      createdAt:
        type: "string"
        format: "date-time"
  Status:
    properties:
      code:
        type: "integer"
      message:
        type: "string"
      succeeded:
        type: "boolean"
  authlogin_user:
    properties:
      email:
        type: "string"
      password:
        type: "string"
  data:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/authlogin_user"
  userscreate_user:
    properties:
      name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
  data_1:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/userscreate_user"
  data_2:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/userscreate_user"
  postscreate_post:
    properties:
      user:
        type: "string"
      content:
        type: "string"
  data_3:
    type: "object"
    properties:
      post:
        $ref: "#/definitions/postscreate_post"
  data_4:
    type: "object"
    properties:
      post:
        $ref: "#/definitions/postscreate_post"
  data_5:
    type: "object"
    properties:
      comment:
        $ref: "#/definitions/postscreate_post"
  data_6:
    type: "object"
    properties:
      comment:
        $ref: "#/definitions/postscreate_post"
